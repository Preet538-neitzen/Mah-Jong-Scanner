{"version":3,"sources":["pages/Card.js","pages/Home.js","pages/QRgenerator.js","pages/QRscanner.js","App.js","reportWebVitals.js","index.js"],"names":["Card","console","log","speak","useSpeechSynthesis","React","useState","className","style","width","height","color","onClick","text","rate","Home","Typography","margin","variant","Grid","container","spacing","item","xs","to","Button","size","padding","path","mdiQrcodeScan","title","QRgenerator","qr","setQr","Fab","marginRight","ArrowBack","marginTop","TextField","onChange","event","target","value","label","id","includeMargin","TextareaAutosize","fontSize","rowsMax","defaultValue","pngUrl","document","getElementById","toDataURL","replace","downloadLink","createElement","href","download","body","appendChild","click","removeChild","marginLeft","GetApp","QRscanner","setValue","qrscan","setQrscan","delay","onError","err","error","onScan","data","e","App","basename","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","process","StrictMode"],"mappings":"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","file":"static/js/main.20cece11.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {TextareaAutosize} from '@material-ui/core'\r\nimport { useSpeechSynthesis } from \"react-speech-kit\";\r\n\r\n\r\nfunction Card() {\r\n\r\n    console.log(\"Aaya\")\r\n    const { speak } = useSpeechSynthesis();\r\n    const [value, setValue] = React.useState(\"\");\r\n    const [qrscan, setQrscan] = useState('No result');\r\n    \r\n \r\n    const handleError = err => {\r\n    console.error(err)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        \r\n            <div className=\"group\">\r\n                <button style={{width:'180px', height:'80px', color:'blue'}} onClick={() => speak({\r\n                     text: \"First: Blue dragon, Blue dragon, Blue dragon, Blue dragon, Blue dragon, North, North, North, North, blue one, blue one, blue one, blue one, blue one. Any dragon, any wind, any number. 40 points \\n Second: Blue two, blue two, blue four, blue four, blue four, blue six, blue six, blue six, blue six, blue eight, blue eight, blue eight, blue eight, blue eight. Any one suit. 45 Points \\n Third: Green one, green one, green two, green two, red three, red three, red three, red three, red three, blue three, blue three, blue three, blue three, blue three. Any three suits, any three consecutive numbers. 45 Points \\n Fourth: Flower, flower, flower, flower, blue one, blue one, blue one, blue one, blue one, blue two, blue two, blue two, blue two, blue two. Any one suit, any two consecutive numbers. 45 Points\", rate: 0.6 })}>\r\n                Qunits\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"group\">\r\n                <button style={{width:'180px', height:'80px', color:'blue'}} onClick={() => speak({ text: \"First: Blue one, blue one, blue two, blue two, blue three, blue three, blue three, blue four, blue four, blue four, blue five, blue five, blue five, blue five, or, blue five, blue five, blue six, blue six, blue seven, blue seven, blue seven, blue eight, blue eight, blue eight, blue nine, blue nine, blue nine, blue nine. These numbers only. 25 Points. \\n Second: Flower, flower, flower, green one, green one, green one, green one, flower, flower, flower, red two, red two, red two, red two. Any two suits in any two consecutive numbers. 25 Points. \\n Third: Flower, Flower, blue one, blue one, blue one, blue one, blue two, blue two, blue two, blue two, blue three, blue three, blue three, blue three, or, flower, flower, green one, green one, green one, green one, red two, red two, red two, red two, blue three, blue three, blue three, blue three. Any run. 25 Points \\n Fourth: green one, green one, green two, green two, green two, red one, red one, red two red two, red two, blue dragon, blue dragon, blue dragon, blue dragon. Any three suits, any two consecutive numbers with Opposite dragon. 25 points. \\n Fifth: blue one, blue one, blue one, blue two, blue two, blue two, blue three, blue three, blue three, blue three, blue four, blue four, blue four, blue four, or, green one, green one, green one, green two, green two, green two, red three, red three, red three, red three, red four, red four, red four, red four. Any run. 25 points. \\n Sixth: Green one, Green one, Green one, Green one, red two, red two, green two, green two, blue two, blue two, green three, green three, green three, green three. Any three consecutive numbers, Pairs must be middle number in all three suits. 30 points. \\n Seventh: Flower, Flower, Flower, Flower, blue one, blue one, blue two, blue two, blue three, blue three, blue three, blue dragon, blue dragon, blue dragon. Any three consecutive numbers with matching dragons. 25 points. \\n Eighth: green one, green one, green one, green two, green three, green three, green three, red one, red one, red one, red two, red three. Any two suits, any three consecutive numbers. 30 Points.\", rate: 0.6 })}>\r\n                Consecutive Run\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"group\">\r\n                <button style={{width:'180px', height:'80px', color:'blue'}} onClick={() => speak({ text: \"First: Blue one, blue one, blue three, blue three, blue three, blue five, blue five, blue five, blue five, blue seven, blue seven, blue seven, blue nine, blue nine, or, green one, green one, green three, green three, green three, red five, red five, red five, red five, blue seven, blue seven, blue seven, blue nine, blue nine. Any one or three suits. 25 Points \\n Second: Flower, flower, green one, green one, green one, green one, red three, red three, red three, red three, blue five, blue five, blue five, blue five, or, flower, flower, green five, green five, green five, green five, red seven, red seven, red seven, red seven, blue nine, blue nine, blue nine, blue nine. Any three suits. 25 Points \\n Third: Green one, Green one, Green one, green three, green three, green three, red three, red three, red three, red three, red five, red five, red five, red five, or, green five, green five, green five, green seven, green seven, green seven, red seven, red seven, red seven, red seven, red nine, red nine, red nine, red nine. Any two suits. 25 Points \\n Fourth: Flower, Flower, Flower, green one, green one, green one, green one, red three, red five, red seven, green nine, green nine, green nine, green nine. Any two suits, One's and nine's match, three, five, seven, in second suit. \\n Fifth: Blue one, Blue one, Blue one, Blue one, blue three, blue three, blue three, blue five, blue five, blue five, blue five, blue dragon, blue dragon, blue dragon, or, blue five, blue five, blue five, blue five, blue seven, blue seven, blue seven, blue nine, blue nine, blue nine, blue nine, blue dragon, blue dragon, blue dragon. Any one suit with matching dragons. 25 points. \\n Sixth: Green one, green one, green three, green three, green three red one, red one, red three, red three, red three, blue five, blue five, blue five, blue five, or, green five, green five, green seven, green seven, green seven, red five, red five, blue nine, blue nine, blue nine, blue nine. Any three suits. 25 points. \\n Seventh: Flower, flower, green one, green three, green three, green five, green five, green five,  red five, red seven, red seven, red nine, red nine, red nine. Any two suits. 30 points. \" })}>\r\n                1 3 5 7 9\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"group\">\r\n                <button style={{width:'180px', height:'80px', color:'blue'}} onClick={() => speak({ text: \"First: Flower, Flower, Green Dragon, Green Dragon, Green Dragon, Green Dragon, Blue Two, Blue Zero, Blue Two, Blue Two, Red Dragon, Red Dragon, Red Dragon, Red Dragon. 2022 in Any 1 suit, Dragons in green and reds only.  25 Points. \\n Second: Green Two, Green Two, Green Two, Red Zero, Red Zero, Red Zero, Blue Two, Blue Two, Blue Two, Blue Two, Red Two, Red Two, Red Two, Red Two. Two's in any three suits. 30 Points. \\n Third: Flower, Flower, Flower, Flower, Green Two, Green Zero, Green Two, Green Two, Red Two, Red Two, Red Two, Blue Two, Blue Two, Blue Two. Any Three Suits. 30 Points. \\n Fourth: North, North, East, East, East, Blue Two, Blue Zero, Blue Two, Blue Two, West, West, West, South, South. Any One Suit. 30 points. \\n Fifth: Flower, Flower, Green Two, Green Zero, Green Two, Green Two, Red Two, Red Zero, Red Two, Red Two, Blue Two, Blue zero, blue two, blue two. Any three suits. 85 points. \" })}>\r\n                2022\r\n                </button>\r\n            </div>\r\n\r\n\r\n            <div className=\"group\">\r\n                <button style={{width:'180px', height:'80px', color:'blue'}} onClick={() => speak({ text: \"First: Flower, Flower, Flower, Blue two, blue two, blue four, blue four, blue six, blue six, blue six, blue eight, blue eight, blue eight, blue eight. Any one suit.  25 Points. \\n Second: Green Two, Green Two, Green four, green six, green eight, green eight, red two, red two, red two, red two, blue two, blue two, blue two, blue two. Any three suits, kongs any like even numbers. 30 Points. \\n Third: Green two, green two, green two, green four, green four, green four, red six, red six, red six, red six, red eight, red eight, red eight, red eight, or, Green two, green two, green two, green four, green four, green four, red six, red six, red six, red six, blue eight, blue eight, blue eight, blue eight. Any two or three suits. 25 Points. \\n Fourth: Green two, green two, green two, green two, blue four, blue four, green six, green six, green six, green six, red eight, red eight, blue eight, blue eight. Any three suits, two, four, six any one suit, pairs of eights other two suits. 30 points. \\n Fifth: Blue two, blue two, blue four, blue four, blue four, blue six, blue six, blue eight, blue eight, blue eight, blue dragon, blue dragon, blue dragon, blue dragon, or, Green two, Green two, Green four, Green four, Green four, red six, red six, red eight, red eight, red eight, blue dragon, blue dragon, blue dragon, blue dragon. Any one or three suits. 25 points. \\m Sixth: Flower, Flower, Flower, green two, green two, green two, green two, flower, flower, flower, red eight, red eight, red eight, red eight. Any two suits of these numbers only. 25 points. \\n Seventh: Green two, green two, green four, green four, green four, red four, red four, red six, red six, red six, blue eight, blue eight, blue eight, blue eight. Any three suits. 25 points. \\n Eighth: Flower, Flower, Green two, green four, green six, green eight, green eight, green eight, red two, red four, red six, red eight, red eight, red eight. Any two suits. 30 points.\" })}>\r\n                2 4 6 8\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"group\">\r\n                <button style={{width:'180px', height:'80px', color:'blue'}} onClick={() => speak({ text: \"First: Flower, flower, green one, green one, green one, green one, flower, flower, flower, red one, red one, red one, red one. Any two suits. 25 points. \\n Second: Green one, green one, green one, green dragon, green dragon, red one, red one, red one, red dragon, red dragon, blue one, blue one, blue one, blue one. Any three suits. 25 points. \\n Third: Flower, flower, green one, green one, green one, green one, red dragon, red dragon, red dragon, red dragon, blue one, blue one, blue one, blue one. Any three suits. 25 Points\" })}>\r\n                Any Like Numbers\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"group\">\r\n                <button style={{width:'180px', height:'80px', color:'blue'}} onClick={() => speak({ text: \"First: North, North, North, North, East, East, East, East, West, West, West, West, South, South. 25 Points \\n Second: Flower, Flower, Flower, Green dragon, Green dragon, Green dragon, Green dragon, red dragon, red dragon, red dragon, blue dragon, blue dragon, blue dragon, blue dragon. Any three dragons.  25 Points \\n Third: Flower, Flower, Flower, Flower, North, North, North, North, East, West, South, South, South, South. 25 Points \\n Fourth: Green one, Green one, Green one, Green one, North, North, East, West, South, South, Red One, red one, red one, red one. Any like odd or even numbers. 30 points. \\n Fifth: North, North, North, North, South, South, South, South, blue one, blue two, blue two, blue three, blue three, blue three. Any three consecutive numbers in one suit. 25 points. \\n Sixth: East, East, East, East, West, West, West, West, blue one, blue two, blue two, blue three, blue three, blue three. Any three consecutive numbers in one suit. 25 points. \\n Seventh: North, North, North, East, West, South, South, South, Green Dragon, Green Dragon, Green Dragon, red dragon, red dragon, red dragon. Any two dragons. 30 points.\" })}>\r\n                Winds - Dragons\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"group\">\r\n                <button style={{width:'180px', height:'80px', color:'blue'}} onClick={() => speak({ text: \"First: Green three, Green three, Green three, green six, green six, green six, red six, red six, red six, red six, red nine, red nine, red nine, red nine. Any two suits.  25 Points \\n Second: Flower, flower, flower, blue three, blue three, blue three, blue three, blue six, blue six, blue six, blue nine, blue nine, blue nine, blue nine, or, Flower, flower, green three, green three, green three, green three, red six, red six, red six, blue nine, blue nine, blue nine, blue nine. Any one or three suits. 25 points.  \\n Third: Red three, Red three, Red six, Red six , Red six, green dragon, green dragon, green dragon, green dragon, blue six, blue six, blue six, blue nine, blue nine. Any three suits. 25 Points \\n Fourth: Flower, flower, blue three, blue three, blue six, blue six, blue six, blue nine, blue nine, blue nine, blue nine, blue dragon, blue dragon, blue dragon. Any one suit. 25 points. \\n Fifth: green three, green three, green three, green three, green six, green six, green six, green six, red nine, red nine,red nine, blue nine, blue nine, blue nine. Any three suits, Pungs nines only in opposite suits. 25 points. \\n Sixth: Flower, flower, blue three, blue three, blue three, blue six, blue six, blue nine, blue nine, blue nine, green three, green three, green three, green three. Any two suits, Kong from three, six or Nine. \\n Seventh: Flower, flower, green three, green six, green six, green nine, green nine, green nine, red three, red six, red six, red nine, red nine, red nine. Any two suits. 30 points.\" })}>\r\n                3 6 9\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"group\">\r\n                <button style={{width:'180px', height:'80px', color:'blue'}} onClick={() => speak({ text: \"First: North, north, east, east, west, west, south, south, green dragon, green dragon, red dragon, red dragon, blue dragon, blue dragon. 50 Points \\n Second: Green one, green one, green three, gree three, green five, green five, green seven, green seven, green nine, green nine, red one, red one,  blue one, blue one. Odd numbers in any one suit, any pairs of like odd numbers in opposite suits. 50 Points. \\n Third: Flower, flower, green one, green one, green two, green two, green three, green three, red one, red one, red two, red two, red three, red three. Any two suits, any three consecutive numbers. 50 Points. \\n Fourth: Blue one, blue one, blue two, blue two, blue three, blue three, blue four, blue four, blue five, blue five, blue six, blue six, blue seven, blue seven. Any seven consecutive numbers. 50 points. \\n Fifth: Flower, flower, green two, green two, green four, green six, green eight, green eight, red two, red two, red four, red six, red eight, red eight. Any two suits. 50 points. \\n Sixth: Green three, green three, green six, red three, red three, red six, red six, red nine, blue three, blue three, blue six, blue six, blue nine, blue nine. Any three suits. 50 Points\" })}>\r\n                Singles and Pairs\r\n                </button>\r\n            </div>\r\n\r\n \r\n\r\n      </div>\r\n    \r\n    );\r\n  }\r\n  \r\n  export default Card;\r\n  ","import {Grid, Button, Typography} from '@material-ui/core';\nimport Icon from '@mdi/react'\nimport { mdiQrcode, mdiQrcodeScan } from '@mdi/js';\nimport { Link } from \"react-router-dom\";\nimport Card from './Card'\n\nfunction Home() {\n\n    return (\n        <div>\n\n            <Typography style={{margin:30}} variant=\"h2\">\n            Mah Jong Scanner\n            </Typography>\n\n            <Grid container spacing={12}>\n                <Grid item xs={6}>\n                    <Link to=\"/qr_scanner\">\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\">\n                        <Icon \n                        style={{padding:10}}\n                        path={mdiQrcodeScan}\n                        title=\"QR Scanner\"\n                        size={10}\n                        color=\"white\"\n                        />\n                    </Button>\n                    </Link>\n                </Grid>\n                <Grid item xs={6}>\n                    <Link to=\"/card\">\n                    <Button variant=\"contained\" size=\"large\" color=\"red\">\n                        <Icon \n                        style={{padding:10}}\n                        path={Card}\n                        title=\"Card\"\n                        size={10}\n                        color=\"red\"\n                        />\n                    </Button>\n                    </Link>\n                </Grid>\n            </Grid>\n        \n        </div>\n    );\n  }\n  \n  export default Home;\n  ","import React, {useState} from 'react'\nimport {Fab, TextField, TextareaAutosize, Grid} from '@material-ui/core'\nimport {ArrowBack, GetApp} from '@material-ui/icons'\nimport { Link } from \"react-router-dom\";\nimport QRcode from 'qrcode.react'\n\nfunction QRgenerator() {\n    const [qr, setQr] = useState('Demo QR');\n    const handleChange = (event) => {\n        setQr(event.target.value);\n    };\n    const downloadQR = () => {\n        const canvas = document.getElementById(\"myqr\");\n        const pngUrl = canvas\n          .toDataURL(\"image/png\")\n          .replace(\"image/png\", \"image/octet-stream\");\n        let downloadLink = document.createElement(\"a\");\n        downloadLink.href = pngUrl;\n        downloadLink.download = qr + \".png\";\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n    };\n\n    return (\n      <div>\n            <Link to=\"/\">\n            <Fab style={{marginRight:10}} color=\"primary\">\n                <ArrowBack/>\n            </Fab>\n            </Link>\n            <span>QR Generator</span>\n            \n            <div style={{marginTop:30}}>\n                <TextField onChange={handleChange} style={{width:320}}\n                value={qr} label=\"QR content\" size=\"large\" variant=\"outlined\" color=\"primary\" \n                />\n            </div>\n\n            <div>\n                {\n                    qr ?\n                    <QRcode \n                        id=\"myqr\"\n                        value={qr} \n                        size={320}\n                        includeMargin={true}\n                    /> :\n                    <p>No QR code preview</p>\n                }\n            </div>\n            <div>\n                {\n                    qr ? \n                    <Grid container>\n                        <Grid item xs={10}>\n                        <TextareaAutosize\n                            style={{fontSize:18, width:250, height:100}}\n                            rowsMax={4}\n                            defaultValue={qr}\n                            value={qr}\n                        />\n                        </Grid>\n                        <Grid item xs={2}>\n                        <Fab onClick={downloadQR} style={{marginLeft:10}} color=\"primary\">\n                            <GetApp/>\n                        </Fab>\n                        </Grid>\n                    </Grid> :\n                    ''\n                }\n            </div>\n      </div>\n    );\n  }\n  \n  export default QRgenerator;\n  ","import React, {useState} from 'react'\nimport {Fab, TextareaAutosize} from '@material-ui/core'\nimport {ArrowBack} from '@material-ui/icons'\nimport { Link } from \"react-router-dom\";\nimport QrScan from 'react-qr-reader'\nimport { useSpeechSynthesis } from \"react-speech-kit\";\n\n\nfunction QRscanner() {\n    const { speak } = useSpeechSynthesis();\n    const [value, setValue] = React.useState(\"\");\n    const [qrscan, setQrscan] = useState('No result');\n    console.log(qrscan)\n    const handleScan = data => {\n        if (data) {\n            \n            setQrscan(data)\n        }\n    }\n    const handleError = err => {\n    console.error(err)\n    }\n\n    return (\n      <div>\n            <Link to=\"/\">\n            <Fab style={{marginRight:10}} color=\"primary\">\n                <ArrowBack/>\n            </Fab>\n            </Link>\n            <span>QR Scanner</span>\n            \n            <center>\n            <div style={{marginTop:30}}>\n                <QrScan\n                    delay={300}\n                    onError={handleError}\n                    onScan={handleScan}\n                    style={{ height: 240, width: 320 }}\n                />\n            </div>\n            </center>\n\n            <TextareaAutosize\n                style={{fontSize: 0.5, width: 0.5, height: 0.5, marginTop:100}}\n                rowsMax={1}\n                defaultValue={qrscan}\n                value={qrscan}\n                onChange={(e) => setValue(e.target.value)}\n            />\n            <div className=\"group\">\n                <button style={{width:'400px', height:'160px', color:'blue'}} onClick={() => speak({ text: qrscan })}>\n                Speak\n                </button>\n            </div>\n\n      </div>\n    );\n  }\n  \n  export default QRscanner;\n  ","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from \"react-router-dom\";\n\nimport Home from './pages/Home'\nimport QRgen from './pages/QRgenerator'\nimport QRscan from './pages/QRscanner'\nimport Speech from './speech'\n// import { Card } from '@material-ui/core';\nimport Card from './pages/Card'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n      \n        <Router basename='/Mah-Jong-Scanner/'>\n          <div>\n\n            <Switch>\n              <Route exact path='/'>\n                <Home/>\n              </Route>\n              <Route path='/qr_generator'>\n                <QRgen/>\n              </Route>\n              <Route path='/qr_scanner'>\n                <QRscan/>\n              </Route>\n              <Route path='/card'>\n                <Card/>\n              </Route>\n            </Switch>\n\n          </div>\n        </Router>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport BrowserRouter from 'react-router-dom/BrowserRouter';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n    \n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}